-- Manager Level Transactions

-- Add new employee
INSERT INTO VendorUser VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
INSERT INTO Employee VALUES (?, ?, ?, ?, ?);

-- Managers can only edit the info. of customer representatives
UPDATE VendorUser INNER JOIN Employee ON Username = EmployeeID
SET Username = ?,
    UserPassword = ?,
    FirstName = ?,
    LastName = ?,
    Address = ?,
    City = ?,
    State = ?,
    ZipCode = ?,
    Telephone = ?,
    Email = ?,
    SSN = ?,
    HourlyRate = ?
WHERE
    Username = ? AND EmployeeLevel = 'CustomerRep';

-- Employees, managers or customer representatives, can edit their own information
UPDATE VendorUser INNER JOIN Employee ON Username = EmployeeID
SET FirstName = ?,
    LastName = ?,
    Address = ?,
    City = ?,
    State = ?,
    ZipCode = ?,
    Telephone = ?,
    Email = ?,
    SSN = ?
WHERE 
    Username = ?;

-- Managers can delete customer representatives
DELETE FROM VendorUser INNER JOIN Employee ON Username = EmployeeID
WHERE Username = ? AND EmployeeLevel = 'CustomerRep';

-- Obtain a sales report for a particular month
SELECT AuctionID, ItemName, CurrentHighestBidPrice AS SoldPrice
FROM Auction INNER JOIN Item USING (ItemID)
WHERE MONTH(EndDate) = ? AND SaleID IS NOT NULL;

-- Produce a comprehensive listing of all items
SELECT *
FROM (Item LEFT JOIN
(SELECT ItemID, COUNT(*) AS NumAuctionsSold,
        FORMAT(MAX(CurrentHighestBidPrice / NumCopies), 2) AS MaxSoldPrice,
        FORMAT(MIN(CurrentHighestBidPrice / NumCopies), 2) AS MinSoldPrice,
        FORMAT(AVG(CurrentHighestBidPrice / NumCopies), 2) AS AvgSoldPrice,
        SUM(NumCopies) AS TotalNumSold,
        SUM(CurrentHighestBidPrice) AS TotalRevenue
 FROM Auction
 WHERE SaleID IS NOT NULL GROUP BY ItemID
) AS A1 USING (ItemID)) LEFT JOIN
(SELECT ItemID, COUNT(*) AS NumAuctionsActive
 FROM Auction
 WHERE EndDate < NOW() GROUP BY ItemID
) AS A2 USING (ItemID);

-- Produce a list of sales by item name
SELECT AuctionID, ItemName, CurrentHighestBidPrice AS SoldPrice
FROM Auction INNER JOIN Item USING (ItemID)
WHERE ItemName LIKE CONCAT('%', ?, '%') AND SaleID IS NOT NULL;

-- Produce a list of sales by seller name
SELECT AuctionID, Seller, FirstName, LastName, CurrentHighestBidPrice AS SoldPrice
FROM Auction AS A INNER JOIN VendorUser AS V ON A.Seller = V.Username
WHERE (FirstName LIKE CONCAT('%', ?, '%') OR LastName LIKE CONCAT('%', ?, '%')) AND SaleID IS NOT NULL;

-- Produce a list of sales by buyer name
SELECT A.AuctionID, B.CustomerID AS Buyer, FirstName, LastName, CurrentHighestBidPrice AS SoldPrice
FROM (Auction AS A INNER JOIN Bid AS B ON A.SaleID = B.BidID) INNER JOIN VendorUser AS V ON B.CustomerID = V.Username 
WHERE (FirstName LIKE CONCAT('%', ?, '%') OR LastName LIKE CONCAT('%', ?, '%')) AND SaleID IS NOT NULL;

-- Produce a summary listing of revenue generated by a particular item ID
SELECT ItemID, ItemName, ItemType, Description, TotalRevenue
FROM Item LEFT JOIN
(SELECT ItemID, SUM(CurrentHighestBidPrice) AS TotalRevenue
 FROM Auction
 WHERE SaleID IS NOT NULL GROUP BY ItemID
) AS A USING (ItemID)
WHERE ItemID = ?;

-- Produce a summary listing of revenue generated by a particular item type
SELECT ItemID, ItemName, ItemType, Description, TotalRevenue
FROM Item LEFT JOIN
(SELECT ItemID, SUM(CurrentHighestBidPrice) AS TotalRevenue
 FROM Auction
 WHERE SaleID IS NOT NULL GROUP BY ItemID
) AS A USING (ItemID)
WHERE ItemType = ?;

-- Produce a summary listing of revenue generated by a particular Seller
SELECT Seller, FirstName, LastName, SUM(CurrentHighestBidPrice) AS TotalRevenue
FROM Auction AS A INNER JOIN VendorUser AS V ON A.Seller = V.Username
WHERE Seller = ? AND SaleID IS NOT NULL GROUP BY Seller;

-- Determine which customer representative generated the most total revenue
-- Note: I needed the subquery since there could possibly be multiple customer reps that tie for the highest revenue
SELECT Monitor, FirstName, LastName, Email, SUM(CurrentHighestBidPrice) AS HighestRevenue
FROM Auction AS A INNER JOIN VendorUser AS V ON A.Monitor = V.Username
WHERE SaleID IS NOT NULL GROUP BY Monitor
HAVING HighestRevenue = (SELECT SUM(CurrentHighestBidPrice) AS TotalRevenue
                         FROM Auction 
                         WHERE SaleID IS NOT NULL GROUP BY Monitor
                         ORDER BY TotalRevenue DESC LIMIT 1);

-- Determine which Seller generated most total revenue
SELECT Seller, FirstName, LastName, Email, SUM(CurrentHighestBidPrice) AS HighestRevenue
FROM Auction AS A INNER JOIN VendorUser AS V ON A.Seller = V.Username
WHERE SaleID IS NOT NULL GROUP BY Seller
HAVING HighestRevenue = (SELECT SUM(CurrentHighestBidPrice) AS TotalRevenue
                         FROM Auction 
                         WHERE SaleID IS NOT NULL GROUP BY Seller
                         ORDER BY TotalRevenue DESC LIMIT 1);

-- Produce a best-sellers list of items
SELECT ItemID, ItemName, TotalNumSold
FROM Item INNER JOIN 
(SELECT ItemID, SUM(NumCopies) AS TotalNumSold
 FROM Auction
 WHERE SaleID IS NOT NULL
 GROUP BY ItemID
) AS A USING (ItemID)
ORDER BY TotalNumSold DESC LIMIT ?;

-- Customer-representative Level Transactions

-- Customer Level Transactions
